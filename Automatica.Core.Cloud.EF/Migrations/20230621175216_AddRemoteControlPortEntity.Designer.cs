// <auto-generated />
using System;
using Automatica.Core.Cloud.EF.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Automatica.Core.Cloud.EF.Migrations
{
    [DbContext(typeof(CoreContext))]
    [Migration("20230621175216_AddRemoteControlPortEntity")]
    partial class AddRemoteControlPortEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Automatica.Core.Cloud.EF.Models.CoreServer", b =>
                {
                    b.Property<Guid>("ObjId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApiKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastKnownConnection")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastKnownRemoteConnectUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastKnownRemoteConnectUrlDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Rid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ServerGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ServerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("This2User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("0.0.0.0");

                    b.HasKey("ObjId");

                    b.HasIndex("This2User");

                    b.ToTable("CoreServers");
                });

            modelBuilder.Entity("Automatica.Core.Cloud.EF.Models.License", b =>
                {
                    b.Property<Guid>("ObjId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AllowRemoteControl")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeaturesString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicensedTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxDatapoints")
                        .HasColumnType("int");

                    b.Property<int>("MaxUsers")
                        .HasColumnType("int");

                    b.Property<Guid>("This2CoreServer")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("This2VersionKey")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ObjId");

                    b.HasIndex("This2CoreServer");

                    b.HasIndex("This2VersionKey");

                    b.ToTable("Licenses");
                });

            modelBuilder.Entity("Automatica.Core.Cloud.EF.Models.LicenseKey", b =>
                {
                    b.Property<Guid>("ObjId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PrivateKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("ObjId");

                    b.ToTable("LicenseKeys");
                });

            modelBuilder.Entity("Automatica.Core.Cloud.EF.Models.Plugin", b =>
                {
                    b.Property<Guid>("ObjId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AzureFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("develop");

                    b.Property<string>("ComponentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPrerelease")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<string>("MinCoreServerVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PluginGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PluginType")
                        .HasColumnType("int");

                    b.Property<string>("PluginVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Publisher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("This2User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ObjId");

                    b.HasIndex("This2User");

                    b.ToTable("Plugins");
                });

            modelBuilder.Entity("Automatica.Core.Cloud.EF.Models.PluginFeature", b =>
                {
                    b.Property<Guid>("ObjId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FeatureName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("bit");

                    b.Property<Guid>("This2Plugin")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ObjId");

                    b.HasIndex("This2Plugin");

                    b.ToTable("PluginFeatures");
                });

            modelBuilder.Entity("Automatica.Core.Cloud.EF.Models.RemoteControlPort", b =>
                {
                    b.Property<int>("Port")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Port"));

                    b.Property<DateTime>("LastUsed")
                        .HasColumnType("datetime2");

                    b.Property<string>("PortType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("This2CoreServer")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("This2DriverId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Port");

                    b.HasIndex("This2CoreServer");

                    b.ToTable("RemoteControlPorts");
                });

            modelBuilder.Entity("Automatica.Core.Cloud.EF.Models.ServerVersion", b =>
                {
                    b.Property<Guid>("ObjId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AzureFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("develop");

                    b.Property<string>("ChangeLog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPrerelease")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<string>("Rid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ObjId");

                    b.ToTable("Versions");
                });

            modelBuilder.Entity("Automatica.Core.Cloud.EF.Models.User", b =>
                {
                    b.Property<Guid>("ObjId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActivationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ApiKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublisherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.HasKey("ObjId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Automatica.Core.Cloud.EF.Models.CoreServer", b =>
                {
                    b.HasOne("Automatica.Core.Cloud.EF.Models.User", "This2UserNavigation")
                        .WithMany()
                        .HasForeignKey("This2User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("This2UserNavigation");
                });

            modelBuilder.Entity("Automatica.Core.Cloud.EF.Models.License", b =>
                {
                    b.HasOne("Automatica.Core.Cloud.EF.Models.CoreServer", "This2CoreServerNavigation")
                        .WithMany()
                        .HasForeignKey("This2CoreServer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Automatica.Core.Cloud.EF.Models.LicenseKey", "This2VersionKeyNavigation")
                        .WithMany()
                        .HasForeignKey("This2VersionKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("This2CoreServerNavigation");

                    b.Navigation("This2VersionKeyNavigation");
                });

            modelBuilder.Entity("Automatica.Core.Cloud.EF.Models.Plugin", b =>
                {
                    b.HasOne("Automatica.Core.Cloud.EF.Models.User", "This2UserNavigation")
                        .WithMany()
                        .HasForeignKey("This2User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("This2UserNavigation");
                });

            modelBuilder.Entity("Automatica.Core.Cloud.EF.Models.PluginFeature", b =>
                {
                    b.HasOne("Automatica.Core.Cloud.EF.Models.Plugin", "This2PluginNavigation")
                        .WithMany("LicenseFeatures")
                        .HasForeignKey("This2Plugin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("This2PluginNavigation");
                });

            modelBuilder.Entity("Automatica.Core.Cloud.EF.Models.RemoteControlPort", b =>
                {
                    b.HasOne("Automatica.Core.Cloud.EF.Models.CoreServer", "This2CoreServerNavigation")
                        .WithMany()
                        .HasForeignKey("This2CoreServer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("This2CoreServerNavigation");
                });

            modelBuilder.Entity("Automatica.Core.Cloud.EF.Models.Plugin", b =>
                {
                    b.Navigation("LicenseFeatures");
                });
#pragma warning restore 612, 618
        }
    }
}
